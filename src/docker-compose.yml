version: '3.4'

services:
  elasticsearch:
    image: ${DOCKER_REGISTRY}/elk-workshop.elasticsearch
    build:
      context: elk/elasticsearch/

  logstash:
    image: ${DOCKER_REGISTRY}/elk-workshop.logstash
    build:
      context: elk/logstash/
    depends_on:
      - elasticsearch

  kibana:
    image: ${DOCKER_REGISTRY}/elk-workshop.kibana
    build:
      context: elk/kibana/
    depends_on:
      - elasticsearch

  rabbitmq:
    image: "rabbitmq:3.8-management"
    healthcheck:
      test: ["CMD-SHELL", "if rabbitmqctl status; then \nexit 0 \nfi \nexit 1"]
      interval: 10s
      retries: 5

  healthchecks:
    image: ${DOCKER_REGISTRY}/healthchecks
    build:
      context: .
      dockerfile: ITOps.HealthMonitor/Dockerfile

  store-contentmanagement:
    image: ${DOCKER_REGISTRY}/storecontentmanagement
    build:
      context: .
      dockerfile: Store.ContentManagement/Dockerfile
    depends_on:
      - rabbitmq

  store-customerrelations:
    image: ${DOCKER_REGISTRY}/storecustomerrelations
    build:
      context: .
      dockerfile: Store.CustomerRelations/Dockerfile
    depends_on:
      - rabbitmq
      
  store-operations:
    image: ${DOCKER_REGISTRY}/storeoperations
    build:
      context: .
      dockerfile: Store.Operations/Dockerfile
    depends_on:
      - rabbitmq
      
  store-sales:
    image: ${DOCKER_REGISTRY}/storesales
    build:
      context: .
      dockerfile: Store.Sales/Dockerfile
    depends_on:
      - rabbitmq

  store-ecommerce:
    image: ${DOCKER_REGISTRY}/storeecommerce
    build:
      context: .
      dockerfile: Store.ECommerce/Dockerfile
    depends_on:
      - rabbitmq

